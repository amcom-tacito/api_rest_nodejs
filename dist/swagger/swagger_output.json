{
  "openapi": "3.0.3",
  "info": {
    "version": "1.4.0",
    "title": "Rest API (Nodejs x Typescript x MongoDB)",
    "description": "API de teste para aprendizado da stack utilizada"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Geral"
        ],
        "description": "Detalhes de implementação",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/pessoa/": {
      "get": {
        "tags": [
          "Pessoas"
        ],
        "description": "Recupera todas as pessoas getAll()",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [
          "Pessoas"
        ],
        "description": "Cadastra uma nova pessoa",
        "parameters": [],
        "responses": {
          "201": {
            "$ref": "#/components/responses/PostPessoaCriada",
            "description": "Criado"
          },
          "412": {
            "$ref": "#/components/responses/PostDadosIncompletos",
            "description": "Falha de Pré-condição"
          },
          "422": {
            "$ref": "#/components/responses/PostTiposErrados",
            "description": ""
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PostPessoa"
        }
      }
    },
    "/pessoa/{id}": {
      "get": {
        "tags": [
          "Pessoas"
        ],
        "description": "Recupera uma pessoa pelo seu ObjectId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Pessoas"
        ],
        "description": "Atualiza os dados de uma pessoa completamente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Pessoas"
        ],
        "description": "Exclui uma pessoa",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    }
  },
  "components": {
    "schemas": {
      "pessoa": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "example": "João Silva"
          },
          "salario": {
            "type": "number",
            "example": 1000
          },
          "ativo": {
            "type": "boolean",
            "example": true
          }
        }
      }
    },
    "examples": {
      "pessoa": {
        "summary": "Model Pessoa",
        "value": {
          "nome": "João Silva",
          "salario": 1000,
          "ativo": true
        }
      }
    },
    "requestBodies": {
      "PostPessoa": {
        "description": "Pessoa para adicionar ao sistema",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/pessoa"
            },
            "example": {
              "nome": "João Silva",
              "salario": 1000,
              "ativo": true
            }
          }
        }
      }
    },
    "responses": {
      "PostPessoaCriada": {
        "description": "Pessoa criada com sucesso!",
        "content": {
          "application/json": {
            "example": {
              "message": "Pessoa criada com sucesso!",
              "dados": [
                {
                  "nome": "João Silva",
                  "salario": 1000,
                  "ativo": true
                }
              ]
            }
          }
        }
      },
      "PostDadosIncompletos": {
        "description": "Dados incompletos",
        "content": {
          "application/json": {
            "example": {
              "Criado": false,
              "Erro": "FieldException",
              "Mensagem": "O <field> do usuário é obrigatório",
              "Correção": "Insira um valor: <field>: <string>"
            }
          }
        }
      },
      "PostTiposErrados": {
        "description": "Dados com tipagens erradas",
        "content": {
          "application/json": {
            "example": {
              "Criado": false,
              "Erro": "FieldException",
              "Mensagem": "O <field> do usuário é obrigatório",
              "Correção": "O tipo inserido (<typeInserted>) não é aceito. O Correto é: <field>: <SchemaType>"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}